name: Node.js Package

on:
  push:
    branches: [main]
  release:
    types: [created]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build, Generate and Publish
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - id: get_version
        if: github.event_name == 'release'
        uses: battila7/get-version-action@v2

      - name: Replace version
        if: github.event_name == 'release'
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "0.0.0"
          replace: ${{ steps.get_version.outputs.version }}
          regex: false
          include: '**/package.json'

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i

      - name: Install playground dependencies
        run: cd playground && pnpm i --shamefully-hoist

      - name: Build playground
        run: pnpm dev:generate

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Inlined Playground HTML
          path: playground/.output/inlined/index.html
          if-no-files-found: error
          retention-days: 1

      - name: Pull request artifacts
        if: ${{ github.event_name == 'pull_request' }}
        uses: gavv/pull-request-artifacts@v1.0.0
        with:
          commit: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          artifacts-branch: artifacts
          artifacts: |
            playground/.output/inlined/index.html

      - name: Lint
        run: pnpm lint

      - name: Prepack
        run: pnpm prepack

      - run: pnpm publish
        if: github.event_name == 'release'
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
